Міністерство освіти і науки України
Харківський національний університет радіоелектроніки

Кафедра програмної інженерії

Звіт з практичної роботи № 1
з дисципліни «Архітектура програмного забезпечення»
на тему «Шаблон (патерн) проєктування ПЗ»

Виконав:
      студент групи ПЗПІ-22-7
   					       Сахань Дмитро Олександрович
                  15 червня 2025р.			                                              
   Перевірив:
     ст. викладач кафедри ПІ
      Сокорчук Ігор Петрович

	

	



Харків, 2025



4.1 Мета роботи


Підготувати доповідь на тему: «Шаблон (патерн) проєктування ПЗ»
(із книг: Ґамма, “ООП. Патерни проєктування”, GoF, крім патерна Singletone)


4.2 Історія змін

Таблиця 1 — Історія змін та виправлень роботи

 № 	Дата	 Версія звіту 	Опис змін та виправлень
 1	 07.05.2025 	 0.1	 Створено практичну №1















Завдання
Під час практичного заняття необхідно було:
1.	Ознайомитися з класичними шаблонами проєктування програмного забезпечення (GoF), крім патерна Singleton.
2.	Обрати один із шаблонів (патернів) та створити презентацію, яка демонструє:
o	Мету та призначення патерна.
o	Проблему, яку він вирішує.
o	Його компоненти та взаємозв’язки.
o	UML-діаграму.
o	Приклад реалізації в коді.
o	Застосування у власному або демонстраційному проєкті.
3.	Пояснити сильні та слабкі сторони патерна.
4.	Порівняти з альтернативними підходами.

Опис виконаної роботи
Для виконання завдання був обраний патерн Observer (Спостерігач) — один із найпоширеніших поведінкових шаблонів у розробці ПЗ.
Було створено презентацію з 13 слайдів, у якій розглянуто:
•	Мету патерна — відокремлення джерела змін від їх обробників;
•	Проблему — труднощі прямого зв'язування між компонентами системи;
•	Структуру патерна — компоненти Subject, Observer, ConcreteSubject, ConcreteObserver;
•	UML-діаграму — для візуального представлення зв'язків;
•	Приклад реалізації коду — на мові Kotlin для Android-додатку;
•	Застосування у власному проєкті — мобільному додатку для моніторингу стану ґрунту, де екран рекомендацій автоматично реагує на зміну параметрів ґрунту;
•	Переваги та недоліки патерна — включаючи гнучкість, масштабованість, проблеми з відлагодженням;
•	Альтернативи — Mediator, EventBus, Pub/Sub;
•	Підсумки — доцільність і ефективність використання Observer у реальних умовах.
Презентацію було виконано з дотриманням вимог: назва, номеровані слайди, приклади, посилання на джерела, структура. Також підготовлено детальний усний супровід до кожного слайду.

Висновки
У процесі виконання практичного завдання було глибоко проаналізовано патерн проєктування Observer, вивчено його структуру, переваги, недоліки та сфери застосування.
Було створено якісну презентацію з прикладами коду та схемами, а також відображено його використання у власному мобільному проєкті.
Це дозволило:
•	Закріпити знання з архітектурного проєктування;
•	Вивчити практичні аспекти використання патернів;
•	Покращити навички документації та візуалізації проєктних рішень;
•	Продемонструвати розуміння принципів SOLID та реактивної архітектури.
Отримані знання можуть бути використані при розробці складніших систем у майбутньому та під час курсового або дипломного проєктування.







ДОДАТОК А
Посилання на відеозапис та хронологічний опис доповіді

Відеозапис доповіді на  https://youtu.be/mPeKzdSJF6g

0:00 - Привітання 
0:23 - Назва 
0:51 - Мета та Актуальність 
01:32 - Проблема, яку вирішує Observer
 02:33 - Основні компоненти використання 
03:30 - UML-діаграма, та структура 
04:04 - Переваги 04:50 - Недоліки та переваги 
06:02 - Приклад коду 07:00 - Альтернативи 
07:42 - Висновки 08:26 - Список джерел 
08:31 - «Дякую за увагу!»












Додаток Б
(слайди презентації доповіді)

 
Рисунок Б.1 - Слайд 1: Назва
 
Рисунок Б.2 - Слайд 2: Мета патерну

 
Рисунок Б.3 - Слайд 3: Проблема, яку вирішує

 
Рисунок Б.4 - Слайд 4: Основні компоненти

 
Рисунок Б.5 - Слайд 5: UML-діаграма

 
Рисунок Б.6 - Слайд 6: Переваги

 
Рисунок Б.7 – Слайд 7: Недоліки та практика

 
Рисунок Б.8 - Слайд 8: Реалізація в коді

 
Рисунок Б9 - Слайд 9: Альтернативи

 
Рисунок Б.10 - Слайд 10: Висновки

 
Рисунок Б.11 - Слайд 11: Список джерел


















Додаток В
(приклади програмного коду з презентації)
1.	 interface Observer {
2.	 void update(String data);
3.	 }
4.	 class ConcreteObserver implements Observer {
5.	 public void update(String data) {
6.	 System.out.println("Оновлено: " + data);
7.	 }
8.	 }
9.	 class Subject {
10.	 List<Observer> observers = new ArrayList<>();
11.	 void addObserver(Observer o) { observers.add(o); }
12.	 void notifyAll(String data) {
13.	 for (Observer o : observers) o.update(data);
14.	 }
15.	 }

